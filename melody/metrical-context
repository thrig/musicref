#!/usr/bin/env perl
#
# the DATA section contains Tables 14.3a and 14.3b from "Sweet
# Anticipation: Music and the Psychology of Expectation" p.298-9
#
# strong-weak is a melodic motion from a strong beat to a weak, e.g.
# "c4 c4 r4 r4" in 4/4 time; weak-strong is "r4 c4 c4 r4" again in
# 4/4 time; same is something like "c1 c1" in 4/4 time, or perhaps
# "r4 c4 c4" in 3/2 time, or other motions in 4/4 time such as
# "r4 c4 r4 c4" (both on weak). thus given a particular interval
# such as an ascending perfect fifth
#
#     interval s-w   w-s   same       total
#       7     32.0% 61.2%  6.8%       3253
#
# the data indicates these more often occur on weak to strong rhythm
# changes (if I've read the table right...)
#
# totals are how many occurrences of the interval appear in:
#
#     Schaffrath, H. (1995). The Essen Folksong Collection. Ed. D.
#     Huron. Stanford, Calif.: Center for Computer Assisted Research in
#     the Humanities.
#
# these numbers could be used to analyze how closely a given melody
# conforms to statistical folksey norms, or given a particular rhythm
# (so one knows whether the subsequent note forms a strong-weak, weak-
# strong, or same beat type) one could generate statistically likely (or
# unlikely) intervals at that point; "Sweet Anticipation" uses the data
# to form melodies that conform and then break with strong-weak ; weak-
# strong patterns to create syncopation in otherwise isochronous pitches

use 5.14.0;
use warnings;

use List::Util qw(sum);

my %motions;

say "interval s-w   w-s   same       total";

while ( readline *DATA ) {
    chomp;
    my @attr = split /,/;

    printf "% 3d\t%4.1f%% %4.1f%% %4.1f%%\t%d\n", $attr[0],
      map( { $attr[$_] * 100 } 1 .. 3 ), $attr[4];

    $motions{ $attr[0] } = {
        interval      => $attr[0],
        "strong-weak" => $attr[1],
        "weak-strong" => $attr[2],
        "same"        => $attr[3],
        "total"       => $attr[4],
        # some of these aren't exactly 1.000
        "total-odds" => sum( @attr[ 1 .. 3 ] ),
    };
}

#use Data::Dumper; warn Dumper \%motions;

#interval,strong-weak,weak-strong,same,total
__DATA__
0,0.538,0.407,0.055,59825
1,0.323,0.626,0.051,18046
2,0.395,0.543,0.062,37725
3,0.480,0.460,0.060,13948
4,0.620,0.326,0.054,8783
5,0.304,0.645,0.051,12695
6,0.500,0.438,0.063,96
7,0.320,0.612,0.068,3253
8,0.509,0.412,0.079,860
9,0.333,0.620,0.047,2092
10,0.410,0.561,0.029,615
11,0.400,0.400,0.200,15
12,0.428,0.509,0.064,582
-1,0.450,0.501,0.049,24074
-2,0.472,0.474,0.055,59328
-3,0.561,0.372,0.067,16961
-4,0.593,0.347,0.060,7781
-5,0.581,0.354,0.065,5311
-6,0.720,0.200,0.080,79
-7,0.470,0.455,0.075,2644
-8,0.657,0.266,0.077,930
-9,0.633,0.295,0.072,569
-10,0.632,0.327,0.041,220
-11,0.150,0.690,0.150,13
-12,0.672,0.232,0.096,384
